{"remainingRequest":"C:\\Users\\admin\\Desktop\\lzc_website\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\admin\\Desktop\\lzc_website\\src\\components\\Toast.vue?vue&type=template&id=d90eaf5e&scoped=true","dependencies":[{"path":"C:\\Users\\admin\\Desktop\\lzc_website\\src\\components\\Toast.vue","mtime":1615466406000},{"path":"C:\\Users\\admin\\Desktop\\lzc_website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\lzc_website\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\lzc_website\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\admin\\Desktop\\lzc_website\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\lzc_website\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\admin\\Desktop\\lzc_website\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz10b2FzdD57eyBtZXNzYWdlIH19PC9kaXY+Cg=="},{"version":3,"sources":["C:\\Users\\admin\\Desktop\\lzc_website\\src\\components\\Toast.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"C:/Users/admin/Desktop/lzc_website/src/components/Toast.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=toast>{{ message }}</div>\n</template>\n\n<script>\nimport { reactive, toRefs } from 'vue'\nexport default {\n  name: 'Toast',\n  props: ['message']\n}\nexport const useToastEffect = () => {\n  const toastData = reactive({\n    show: false,\n    toastMessage: ''\n  })\n  const showToast = (message) => {\n    toastData.show = true\n    toastData.toastMessage = message\n    setTimeout(() => {\n      toastData.show = false\n      toastData.toastMessage = ''\n    }, 2000)\n  }\n  const { show, toastMessage } = toRefs(toastData)\n  return { toastData, showToast, show, toastMessage }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.toast {\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  padding: 0.1rem;\n  background: rgba(0, 0, 0, 0.35);\n  border-radius: 0.05rem;\n  color: #fff;\n}\n</style>\n"]}]}